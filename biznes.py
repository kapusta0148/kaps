import telebot
from telebot import types
import requests

data = {}
ide = []
crypto = []
banka = []
otzov = ["–ë–æ—Ç –∑–∞–µ–±–∏—Å—å", "10 –±–∞–ª–ª–æ–≤ –∏–∑ 10", "–≤—Å–µ–º —Å–æ–≤–µ—Ç—É—é", "–û–∫", "–ö–æ–∫"]
name1 = []
symma = 0
symma1 = 0
symma2 = 0
symma3 = 0
symma4 = 0
symma5 = 0
symma6 = 0
ton_price_rub = 0
not_price_rub = 0
eth_price_rub = 0
btc_price_rub = 0
trx_price_rub = 0
ltc_price_rub = 0

bot = telebot.TeleBot('7080942322:AAFDP0zVLBSes-fn5X1SMCIcb72WwRv53AU')


@bot.message_handler(commands=["restart"])
def restart(message):
    bot.send_message(-4256642266, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{' '.join(name1)} –æ—Ç–º–µ–Ω–∏–ª –ø–æ–∫—É–ø–∫—É.")
    bot.send_message(message.chat.id, f"–í—ã –Ω–∞—á–∞–ª–∏ –∑–∞–Ω–æ–≤–æ.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
    button3 = types.KeyboardButton("Price")
    button4 = types.KeyboardButton("Help")
    button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
    markup.add(button2, button3, button4, button5)
    bot.send_message(message.chat.id, f'üëáüëáüëá', reply_markup=markup)
    global symma
    symma = symma * 0
    crypto.clear()
    ide.clear()
    banka.clear()
    name1.clear()
    bot.register_next_step_handler(message, vubor)


@bot.message_handler(commands=["start"])
def start(message):
    name = message.from_user.username
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
    button3 = types.KeyboardButton("Price")
    button4 = types.KeyboardButton("Help")
    button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
    markup.add(button2, button3, button4, button5)
    bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, @{name}, —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∫—É–ø–∏—Ç—å '
                                      f'–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ–±–µ –Ω–µ—Ç 18 –ª–µ—Ç. '
                                      f'–ù–æ –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∞–≤–∏–ª–∞:\n'
                                      f'1) –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –Ω–µ —Ü–µ–ª–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã, —Ç–æ '
                                      f'–ø–∏—Å–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–∂–Ω–æ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É. –ü—Ä–∏–º–µ—Ä: 0.1\n'
                                      f'2) –í–∞–º –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å —Å–≤–æ–π ID –∫–æ—à–µ–ª—å–∫–∞, —á—Ç–æ–±—ã –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, —Å–æ–∑–¥–∞–π—Ç–µ'
                                      f' –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—ë–∫, —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ --> https://t.me/wallet\n'
                                      f'3) –ï—Å–ª–∏ –Ω–∞ –∫–∞–∫–æ–º-—Ç–æ –∏–∑ —ç—Ç–∞–ø–æ–≤ –ø–æ–∫—É–ø–∫–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É'
                                      f'–ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø–∏—à–µ—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É --> /restart\n'
                                      f'4) –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å —Ç–æ –∑–∞–¥–∞–π—Ç–µ –µ–≥–æ –º–Ω–µ https://t.me/kapusta0148\n',
                     reply_markup=markup)


def get_bybit_price(symbol):
    url = f"https://api.bybit.com/v2/public/tickers?symbol={symbol}USDT"
    response = requests.get(url)
    data = response.json()

    if response.status_code == 200 and data['ret_code'] == 0:
        return float(data['result'][0]['last_price'])
    else:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã {symbol}: {data.get('ret_msg')}")
        return None


def get_usdt_rub_rate():
    url = 'https://www.cbr-xml-daily.ru/daily_json.js'
    response = requests.get(url)
    data = response.json()
    return float(data['Valute']['USD']['Value'])


def update_prices():
    global ton_price_rub, not_price_rub, eth_price_rub, btc_price_rub, trx_price_rub, ltc_price_rub
    ton_price_usdt = get_bybit_price("TON")
    not_price_usdt = get_bybit_price("NOT")
    eth_price_usdt = get_bybit_price("ETH")
    btc_price_usdt = get_bybit_price("BTC")
    trx_price_usdt = get_bybit_price("TRX")
    ltc_price_usdt = get_bybit_price("LTC")
    usdt_rub = get_usdt_rub_rate()

    if all([ton_price_usdt, not_price_usdt, eth_price_usdt, btc_price_usdt, trx_price_usdt, ltc_price_usdt,  usdt_rub]):
        ton_price_rub = ton_price_usdt * usdt_rub
        not_price_rub = not_price_usdt * usdt_rub
        eth_price_rub = eth_price_usdt * usdt_rub
        btc_price_rub = btc_price_usdt * usdt_rub
        trx_price_rub = trx_price_usdt * usdt_rub
        ltc_price_rub = ltc_price_usdt * usdt_rub
    else:
        print("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")


@bot.message_handler(content_types=["text"])
def vubor(message):
    name = message.from_user.username
    name1.append(name)
    if message.text == "–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button10 = types.KeyboardButton("TON")
        button11 = types.KeyboardButton("ETH")
        button13 = types.KeyboardButton("BTC")
        button14 = types.KeyboardButton("TRX")
        button15 = types.KeyboardButton("NOT")
        button16 = types.KeyboardButton("LTC")
        markup.add(button10, button11, button13, button14, button15, button16)
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â—É—é –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏."
                                          f"üëáüëá", reply_markup=markup)
        bot.register_next_step_handler(message, handle_text)
    elif message.text == "Help":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button17 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
        markup.add(button17)
        bot.send_message(message.chat.id, f"–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ —Ç–µ—Ö. –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –±–æ—Ç–∞, "
                                          f"–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É —Ç–µ—Ö. –º–µ–Ω–µ–¥–∂–µ—Ä—É: "
                                          f"https://t.me/kapusta0148", reply_markup=markup)
        bot.register_next_step_handler(message, back)
    elif message.text == "Price":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button17 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
        markup.add(button17)
        update_prices()
        bot.send_message(message.chat.id,
                         f"üí∞ *–¶–µ–Ω—ã –Ω–∞ Bybit –≤ —Ä—É–±–ª—è—Ö:*\n\n"
                         f"TON: {ton_price_rub:.2f} RUB\n"
                         f"NOT: {not_price_rub:.2f} RUB\n"
                         f"ETH: {eth_price_rub:.2f} RUB\n"
                         f"BTC: {btc_price_rub:.2f} RUB\n"
                         f"TRX: {trx_price_rub:.2f} RUB\n"
                         f"LTC: {ltc_price_rub:.2f} RUB\n",
                         reply_markup=markup)
        bot.register_next_step_handler(message, back)
    elif message.text == "–û—Ç–∑—ã–≤—ã":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button17 = types.KeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤")
        button18 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
        markup.add(button17, button18)
        bot.send_message(message.chat.id, f"{' '.join(otzov[0:1])}", reply_markup=markup)
        del otzov[0:1]
        bot.register_next_step_handler(message, back)


def back(message):
    if message.text == "–Ω–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
        button3 = types.KeyboardButton("Price")
        button4 = types.KeyboardButton("Help")
        button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
        markup.add(button2, button3, button4, button5)
        bot.send_message(message.chat.id, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥  ', reply_markup=markup)
    elif message.text == "–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤":
        if len(otzov) == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button17 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
            markup.add(button17)
            bot.send_message(message.chat.id, "–û—Ç–∑—ã–≤—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.", reply_markup=markup)
            bot.register_next_step_handler(message, back)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button17 = types.KeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤")
            button18 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
            markup.add(button17, button18)
            bot.send_message(message.chat.id, f"{' '.join(otzov[0:1])}", reply_markup=markup)
            del otzov[0:1]
            bot.register_next_step_handler(message, back)


def handle_text(message):
    update_prices()
    if message.text == "TON":
        global symma
        symma = symma + ton_price_rub
        crypto.append("TON")
    elif message.text == "ETH":
        global symma1
        symma = symma1 + eth_price_rub
        crypto.append("ETH")
    elif message.text == "BTC":
        global symma3
        symma = symma3 + btc_price_rub
        crypto.append("BTC")
    elif message.text == "TRX":
        global symma4
        symma = symma4 + trx_price_rub
        crypto.append("TRX")
    elif message.text == "NOT":
        global symma5
        symma = symma5 + not_price_rub
        crypto.append("NOT")
    elif message.text == "LTC":
        global symma6
        symma = symma6 + ltc_price_rub
        crypto.append("LTC")
    bot.reply_to(message, "–°–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–∞–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –æ–ø–ª–∞—Ç–∞üè¶",
                 reply_markup=telebot.types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, get_bank)


def get_bank(message):
    if message.text == "/restart":
        bot.send_message(-4256642266, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{' '.join(name1)} –æ—Ç–º–µ–Ω–∏–ª –ø–æ–∫—É–ø–∫—É.")
        bot.send_message(message.chat.id, f"–í—ã –Ω–∞—á–∞–ª–∏ –∑–∞–Ω–æ–≤–æ.")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
        button3 = types.KeyboardButton("Price")
        button4 = types.KeyboardButton("Help")
        button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
        markup.add(button2, button3, button4, button5)
        bot.send_message(message.chat.id, f'üëáüëáüëá', reply_markup=markup)
        global symma
        symma = symma * 0
        crypto.clear()
        ide.clear()
        banka.clear()
        name1.clear()
        bot.register_next_step_handler(message, vubor)
    else:
        bank = message.text
        banka.append(bank)
        bot.send_message(message.chat.id, f"–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å {' '.join(crypto)} ?")
        bot.register_next_step_handler(message, get_id)


def get_id(message):
    if message.text == "/restart":
        bot.send_message(-4256642266, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{' '.join(name1)} –æ—Ç–º–µ–Ω–∏–ª –ø–æ–∫—É–ø–∫—É.")
        bot.send_message(message.chat.id, f"–í—ã –Ω–∞—á–∞–ª–∏ –∑–∞–Ω–æ–≤–æ.")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
        button3 = types.KeyboardButton("Price")
        button4 = types.KeyboardButton("Help")
        button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
        markup.add(button2, button3, button4, button5)
        bot.send_message(message.chat.id, f'üëáüëáüëá', reply_markup=markup)
        global symma
        symma = symma * 0
        crypto.clear()
        ide.clear()
        banka.clear()
        name1.clear()
        bot.register_next_step_handler(message, vubor)
    else:
        data[message.chat.id] = {"id": message.text}
        bot.send_message(message.chat.id, "–ù–∞–∑–æ–≤–∏—Ç–µ id –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞.")
        bot.register_next_step_handler(message, get_info)


def get_info(message):
    if message.text == "/restart":
        bot.send_message(-4256642266, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{' '.join(name1)} –æ—Ç–º–µ–Ω–∏–ª –ø–æ–∫—É–ø–∫—É.")
        bot.send_message(message.chat.id, f"–í—ã –Ω–∞—á–∞–ª–∏ –∑–∞–Ω–æ–≤–æ.")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
        button3 = types.KeyboardButton("Price")
        button4 = types.KeyboardButton("Help")
        button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
        markup.add(button2, button3, button4, button5)
        bot.send_message(message.chat.id, f'üëáüëáüëá', reply_markup=markup)
        global symma
        symma = symma * 0
        crypto.clear()
        ide.clear()
        banka.clear()
        name1.clear()
        bot.register_next_step_handler(message, vubor)
    else:
        colvo = message.text
        data[message.chat.id]['colvo'] = colvo
        ide.append(colvo)
        rub = float(data[message.chat.id]['id'])
        bot.send_message(message.chat.id, f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å: {data[message.chat.id]['id']} {' '.join(crypto)}\n"
                                          f"–≠—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç: {(rub * symma) + (rub * symma) / 10} rub\n"
                                          f"ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—à—å–∫–∞: {colvo} \n"
                                          f"–ò–º—è –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞: {' '.join(banka)}\n"
                                          f"–ï—Å–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞–∂–º–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è.\n")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button5 = types.KeyboardButton("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        button6 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
        markup.add(button5, button6)
        bot.send_message(message.chat.id, f'üëáüëáüëá ', reply_markup=markup)
        bot.register_next_step_handler(message, finaly)


def finaly(message):
    if message.text == "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å":
        rub = float(data[message.chat.id]['id'])
        bot.send_message(-4256642266, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data[message.chat.id]['id']} {' '.join(crypto)}\n"
                                      f"ID –∫–æ—à–µ–ª—å–∫–∞: {' '.join(ide)}\n"
                                      f"–ò–º—è –±–∞–Ω–∫–∞: {' '.join(banka)}\n"
                                      f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {(rub * symma) + (rub * symma) / 10} rub\n"
                                      f"–ò–º—è: @{' '.join(name1)}\n")
        bot.send_message(message.chat.id, f"–û—Ç–ª–∏—á–Ω–æ —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {(rub * symma) + (rub * symma) / 10} RUB"
                                          f" –Ω–∞ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 123456789 –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤—Å—é —Å—É–º–º—É"
                                          f"–≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≤ —ç—Ç–æ—Ç –±–æ—Ç —Ñ–æ—Ç–æ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –∏–º–µ–Ω–Ω–æ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é, —Å–∫—Ä–∏–Ω "
                                          f"–ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–µ –ø–æ–¥–æ–π–¥—ë—Ç. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞ --> "
                                          f"/restart",
                         reply_markup=telebot.types.ReplyKeyboardRemove())

    elif message.text == "–Ω–∞–∑–∞–¥":
        bot.reply_to(message, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button7 = types.KeyboardButton(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ {' '.join(crypto)}")
        button8 = types.KeyboardButton("ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞")
        button9 = types.KeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞")
        button10 = types.KeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
        markup.add(button7, button8, button9, button10)
        bot.send_message(message.chat.id, f'üëáüëáüëá ', reply_markup=markup)
        bot.register_next_step_handler(message, notfinaly)


def notfinaly(message):
    if message.text == f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ {' '.join(crypto)}":
        bot.send_message(message.chat.id, f'–≤–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ')
        bot.register_next_step_handler(message, notfinaly2)
    elif message.text == "ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞":
        bot.send_message(message.chat.id, f'–≤–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω—ã–π id –∫–æ—à–µ–ª—å–∫–∞')
        bot.register_next_step_handler(message, notfinaly3)
    elif message.text == "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞":
        bot.send_message(message.chat.id, f'–≤–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞')
        bot.register_next_step_handler(message, notfinaly4)
    elif message.text == "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button10 = types.KeyboardButton("TON")
        button11 = types.KeyboardButton("ETH")
        button12 = types.KeyboardButton("GRAM")
        button13 = types.KeyboardButton("BTC")
        button14 = types.KeyboardButton("TRX")
        button15 = types.KeyboardButton("NOT")
        button16 = types.KeyboardButton("LTC")
        markup.add(button10, button11, button12, button13, button14, button15, button16)
        bot.send_message(message.chat.id, f"–ü–æ–∂–∞–π–ª—É—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –≤–∞–ª—é—Çüëáüëá", reply_markup=markup)
        global symma
        symma = symma * 0
        crypto.clear()
        bot.register_next_step_handler(message, notfinaly5)


def notfinaly2(message):
    data[message.chat.id] = {"id": message.text}
    rub = float(data[message.chat.id]['id'])
    bot.send_message(message.chat.id, f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å: {data[message.chat.id]['id']} {' '.join(crypto)}\n"
                                      f"–≠—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç: {(rub * symma) + (rub * symma) / 10} rub\n"
                                      f"ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—à—å–∫–∞: {' '.join(ide)} \n"
                                      f"–ò–º—è –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞: {' '.join(banka)}\n"
                                      f"–ï—Å–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞–∂–º–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button5 = types.KeyboardButton("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    button6 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
    markup.add(button5, button6)
    bot.send_message(message.chat.id, f'üëáüëáüëá ', reply_markup=markup)
    bot.register_next_step_handler(message, finaly)


def notfinaly3(message):
    colvo = message.text
    data[message.chat.id]['colvo'] = colvo
    ide.clear()
    ide.append(colvo)
    rub = float(data[message.chat.id]['id'])
    bot.send_message(message.chat.id, f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å: {data[message.chat.id]['id']} {' '.join(crypto)}\n"
                                      f"–≠—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç: {(rub * symma) + (rub * symma) / 10} rub\n"
                                      f"ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—à—å–∫–∞: {colvo} \n"
                                      f"–ò–º—è –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞: {' '.join(banka)}\n"
                                      f"–ï—Å–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞–∂–º–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button5 = types.KeyboardButton("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    button6 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
    markup.add(button5, button6)
    bot.send_message(message.chat.id, f'üëáüëáüëá ', reply_markup=markup)
    bot.register_next_step_handler(message, finaly)


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    photo = message.photo[-1]
    file_id = photo.file_id
    bot.send_photo(-4256642266, f"{file_id}", f"@{' '.join(name1)}")
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ –æ–∂–∏–¥–∞–π—Ç–µ, –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç –≤–∞–º –ø—Ä–∏–¥—ë—Ç –≤–∞—à–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, –∞ –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ"
                                      " –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –Ω–∞–ø–∏—Å–∞–≤ –µ–≥–æ –≤ —ç—Ç–æ—Ç –±–æ—Ç.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button2 = types.KeyboardButton("–Ø —Ö–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
    button3 = types.KeyboardButton("–Ø –Ω–µ —Ö–æ—á—É –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤")
    markup.add(button2, button3)
    bot.send_message(message.chat.id, f'–î–ª—è —ç—Ç–æ–≥–æ –≤—ã–±–µ—Ä–∏—Ç–µ üëáüëá', reply_markup=markup)
    bot.register_next_step_handler(message, vuborot)


def notfinaly4(message):
    bank = message.text
    banka.clear()
    banka.append(bank)
    rub = float(data[message.chat.id]['id'])
    bot.send_message(message.chat.id, f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å: {data[message.chat.id]['id']} {' '.join(crypto)}\n"
                                      f"–≠—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç: {(rub * symma) + (rub * symma) / 10} rub\n"
                                      f"ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—à—å–∫–∞: {' '.join(ide)} \n"
                                      f"–ò–º—è –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞: {' '.join(banka)}\n"
                                      f"–ï—Å–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥.\n")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button5 = types.KeyboardButton("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    button6 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
    markup.add(button5, button6)
    bot.send_message(message.chat.id, f'üëáüëáüëá ', reply_markup=markup)
    bot.register_next_step_handler(message, finaly)


def notfinaly5(message):
    if message.text == "TON":
        global symma
        symma = symma + ton_price_rub
        crypto.append("TON")
    elif message.text == "ETH":
        global symma1
        symma = symma1 + eth_price_rub
        crypto.append("ETH")
    elif message.text == "BTC":
        global symma3
        symma = symma3 + btc_price_rub
        crypto.append("BTC")
    elif message.text == "TRX":
        global symma4
        symma = symma4 + trx_price_rub
        crypto.append("TRX")
    elif message.text == "NOT":
        global symma5
        symma = symma5 + not_price_rub
        crypto.append("NOT")
    elif message.text == "LTC":
        global symma6
        symma = symma6 + ltc_price_rub
        crypto.append("LTC")
    rub = float(data[message.chat.id]['id'])
    bot.send_message(message.chat.id, f"–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å: {data[message.chat.id]['id']} {' '.join(crypto)}\n"
                                      f"–≠—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç: {(rub * symma) + (rub * symma) / 10} rub\n"
                                      f"ID –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—à—å–∫–∞: {' '.join(ide)} \n"
                                      f"–ò–º—è –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞: {' '.join(banka)}\n"
                                      f"–ï—Å–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞–∂–º–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button5 = types.KeyboardButton("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    button6 = types.KeyboardButton("–Ω–∞–∑–∞–¥")
    markup.add(button5, button6)
    bot.send_message(message.chat.id, f'üëáüëáüëá ', reply_markup=markup)
    bot.register_next_step_handler(message, finaly)


def vuborot(message):
    if message.text == '–Ø —Ö–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤.")
        bot.register_next_step_handler(message, vuborot1)
    elif message.text == "–Ø –Ω–µ —Ö–æ—á—É –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤":
        bot.send_message(message.chat.id, f'–û—á–µ–Ω—å –∂–∞–ª—å(')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
        button3 = types.KeyboardButton("Price")
        button4 = types.KeyboardButton("Help")
        button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
        markup.add(button2, button3, button4, button5)
        bot.send_message(message.chat.id, f'üëáüëáüëá', reply_markup=markup)
        global symma
        symma = symma * 0
        crypto.clear()
        ide.clear()
        banka.clear()
        name1.clear()
        bot.register_next_step_handler(message, vubor)


def vuborot1(message):
    indt = message.text
    bot.send_message(-4256642266, indt)
    bot.send_message(message.chat.id, f'–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É")
    button3 = types.KeyboardButton("Price")
    button4 = types.KeyboardButton("Help")
    button5 = types.KeyboardButton("–û—Ç–∑—ã–≤—ã")
    markup.add(button2, button3, button4, button5)
    bot.send_message(message.chat.id, f'üëáüëáüëá', reply_markup=markup)
    global symma
    symma = symma * 0
    crypto.clear()
    ide.clear()
    banka.clear()
    name1.clear()
    bot.register_next_step_handler(message, vubor)


bot.infinity_polling()
